{"version":3,"sources":["default~app-components-incidents-incidents-module~app-components-process-process-module~app-componen~c190ce4d-es5.js","webpack:///node_modules/@ngrx/entity/fesm2015/entity.js","webpack:///src/app/services/user.service.ts","webpack:///src/app/store/effects/user.effects.ts","webpack:///src/app/store/reducers/user.reducer.ts"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"default~app-components-incidents-incidents-module~app-components-process-process-module~app-componen~c190ce4d\"],{\n\n/***/ \"./node_modules/@ngrx/entity/fesm2015/entity.js\":\n/*!******************************************************!*\\\n  !*** ./node_modules/@ngrx/entity/fesm2015/entity.js ***!\n  \\******************************************************/\n/*! exports provided: createEntityAdapter, Dictionary */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createEntityAdapter\", function() { return createEntityAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Dictionary\", function() { return Dictionary; });\n/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ \"./node_modules/@ngrx/store/fesm2015/store.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/**\n * @license NgRx 8.4.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template V\n * @return {?}\n */\nfunction getInitialEntityState() {\n    return {\n        ids: [],\n        entities: {},\n    };\n}\n/**\n * @template V\n * @return {?}\n */\nfunction createInitialStateFactory() {\n    /**\n     * @param {?=} additionalState\n     * @return {?}\n     */\n    function getInitialState(additionalState = {}) {\n        return Object.assign(getInitialEntityState(), additionalState);\n    }\n    return { getInitialState };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @return {?}\n */\nfunction createSelectorsFactory() {\n    /**\n     * @param {?=} selectState\n     * @return {?}\n     */\n    function getSelectors(selectState) {\n        /** @type {?} */\n        const selectIds = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.ids);\n        /** @type {?} */\n        const selectEntities = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.entities);\n        /** @type {?} */\n        const selectAll = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__[\"createSelector\"])(selectIds, selectEntities, (/**\n         * @param {?} ids\n         * @param {?} entities\n         * @return {?}\n         */\n        (ids, entities) => ids.map((/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => ((/** @type {?} */ (entities)))[id]))));\n        /** @type {?} */\n        const selectTotal = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__[\"createSelector\"])(selectIds, (/**\n         * @param {?} ids\n         * @return {?}\n         */\n        ids => ids.length));\n        if (!selectState) {\n            return {\n                selectIds,\n                selectEntities,\n                selectAll,\n                selectTotal,\n            };\n        }\n        return {\n            selectIds: Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__[\"createSelector\"])(selectState, selectIds),\n            selectEntities: Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__[\"createSelector\"])(selectState, selectEntities),\n            selectAll: Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__[\"createSelector\"])(selectState, selectAll),\n            selectTotal: Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__[\"createSelector\"])(selectState, selectTotal),\n        };\n    }\n    return { getSelectors };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst DidMutate = {\n    EntitiesOnly: 0,\n    Both: 1,\n    None: 2,\n};\nDidMutate[DidMutate.EntitiesOnly] = 'EntitiesOnly';\nDidMutate[DidMutate.Both] = 'Both';\nDidMutate[DidMutate.None] = 'None';\n/**\n * @template V, R\n * @param {?} mutator\n * @return {?}\n */\nfunction createStateOperator(mutator) {\n    return (/**\n     * @template S\n     * @param {?} arg\n     * @param {?} state\n     * @return {?}\n     */\n    function operation(arg, state) {\n        /** @type {?} */\n        const clonedEntityState = {\n            ids: [...state.ids],\n            entities: Object.assign({}, state.entities),\n        };\n        /** @type {?} */\n        const didMutate = mutator(arg, clonedEntityState);\n        if (didMutate === DidMutate.Both) {\n            return Object.assign({}, state, clonedEntityState);\n        }\n        if (didMutate === DidMutate.EntitiesOnly) {\n            return Object.assign({}, state, { entities: clonedEntityState.entities });\n        }\n        return state;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} entity\n * @param {?} selectId\n * @return {?}\n */\nfunction selectIdValue(entity, selectId) {\n    /** @type {?} */\n    const key = selectId(entity);\n    if (Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"isDevMode\"])() && key === undefined) {\n        console.warn('@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n    }\n    return key;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @return {?}\n */\nfunction createUnsortedStateAdapter(selectId) {\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        /** @type {?} */\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            return DidMutate.None;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(entities, state) {\n        /** @type {?} */\n        let didMutate = false;\n        for (const entity of entities) {\n            didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function addAllMutably(entities, state) {\n        state.ids = [];\n        state.entities = {};\n        addManyMutably(entities, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    function removeOneMutably(key, state) {\n        return removeManyMutably([key], state);\n    }\n    /**\n     * @param {?} keysOrPredicate\n     * @param {?} state\n     * @return {?}\n     */\n    function removeManyMutably(keysOrPredicate, state) {\n        /** @type {?} */\n        const keys = keysOrPredicate instanceof Array\n            ? keysOrPredicate\n            : state.ids.filter((/**\n             * @param {?} key\n             * @return {?}\n             */\n            (key) => keysOrPredicate(state.entities[key])));\n        /** @type {?} */\n        const didMutate = keys\n            .filter((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => key in state.entities))\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => delete state.entities[key])).length > 0;\n        if (didMutate) {\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @return {?}\n             */\n            (id) => id in state.entities));\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    function removeAll(state) {\n        return Object.assign({}, state, {\n            ids: [],\n            entities: {},\n        });\n    }\n    /**\n     * @param {?} keys\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeNewKey(keys, update, state) {\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        /** @type {?} */\n        const hasNewKey = newKey !== update.id;\n        if (hasNewKey) {\n            keys[update.id] = newKey;\n            delete state.entities[update.id];\n        }\n        state.entities[newKey] = updated;\n        return hasNewKey;\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const newKeys = {};\n        updates = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => update.id in state.entities));\n        /** @type {?} */\n        const didMutateEntities = updates.length > 0;\n        if (didMutateEntities) {\n            /** @type {?} */\n            const didMutateIds = updates.filter((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => takeNewKey(newKeys, update, state))).length > 0;\n            if (didMutateIds) {\n                state.ids = state.ids.map((/**\n                 * @param {?} id\n                 * @return {?}\n                 */\n                (id) => newKeys[id] || id));\n                return DidMutate.Both;\n            }\n            else {\n                return DidMutate.EntitiesOnly;\n            }\n        }\n        return DidMutate.None;\n    }\n    /**\n     * @param {?} map\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(map, state) {\n        /** @type {?} */\n        const changes = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = map(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        /** @type {?} */\n        const updates = changes.filter((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ id }) => id in state.entities));\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    return {\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        addAll: createStateOperator(addAllMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        removeOne: createStateOperator(removeOneMutably),\n        removeMany: createStateOperator(removeManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @param {?} sort\n * @return {?}\n */\nfunction createSortedStateAdapter(selectId, sort) {\n    const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(selectId);\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        return addManyMutably([entity], state);\n    }\n    /**\n     * @param {?} newModels\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(newModels, state) {\n        /** @type {?} */\n        const models = newModels.filter((/**\n         * @param {?} model\n         * @return {?}\n         */\n        model => !(selectIdValue(model, selectId) in state.entities)));\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            merge(models, state);\n            return DidMutate.Both;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function addAllMutably(models, state) {\n        state.entities = {};\n        state.ids = [];\n        addManyMutably(models, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} models\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeUpdatedModel(models, update, state) {\n        if (!(update.id in state.entities)) {\n            return false;\n        }\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        delete state.entities[update.id];\n        models.push(updated);\n        return newKey !== update.id;\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const models = [];\n        /** @type {?} */\n        const didMutateIds = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => takeUpdatedModel(models, update, state))).length >\n            0;\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            /** @type {?} */\n            const originalIds = state.ids;\n            /** @type {?} */\n            const updatedIndexes = [];\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @param {?} index\n             * @return {?}\n             */\n            (id, index) => {\n                if (id in state.entities) {\n                    return true;\n                }\n                else {\n                    updatedIndexes.push(index);\n                    return false;\n                }\n            }));\n            merge(models, state);\n            if (!didMutateIds &&\n                updatedIndexes.every((/**\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (i) => state.ids[i] === originalIds[i]))) {\n                return DidMutate.EntitiesOnly;\n            }\n            else {\n                return DidMutate.Both;\n            }\n        }\n    }\n    /**\n     * @param {?} updatesOrMap\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(updatesOrMap, state) {\n        /** @type {?} */\n        const updates = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = updatesOrMap(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function merge(models, state) {\n        models.sort(sort);\n        /** @type {?} */\n        const ids = [];\n        /** @type {?} */\n        let i = 0;\n        /** @type {?} */\n        let j = 0;\n        while (i < models.length && j < state.ids.length) {\n            /** @type {?} */\n            const model = models[i];\n            /** @type {?} */\n            const modelId = selectIdValue(model, selectId);\n            /** @type {?} */\n            const entityId = state.ids[j];\n            /** @type {?} */\n            const entity = state.entities[entityId];\n            if (sort(model, entity) <= 0) {\n                ids.push(modelId);\n                i++;\n            }\n            else {\n                ids.push(entityId);\n                j++;\n            }\n        }\n        if (i < models.length) {\n            state.ids = ids.concat(models.slice(i).map(selectId));\n        }\n        else {\n            state.ids = ids.concat(state.ids.slice(j));\n        }\n        models.forEach((/**\n         * @param {?} model\n         * @param {?} i\n         * @return {?}\n         */\n        (model, i) => {\n            state.entities[selectId(model)] = model;\n        }));\n    }\n    return {\n        removeOne,\n        removeMany,\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        addAll: createStateOperator(addAllMutably),\n        addMany: createStateOperator(addManyMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?=} options\n * @return {?}\n */\nfunction createEntityAdapter(options = {}) {\n    const { selectId, sortComparer } = Object.assign({ sortComparer: false, selectId: (/**\n         * @param {?} instance\n         * @return {?}\n         */\n        (instance) => instance.id) }, options);\n    /** @type {?} */\n    const stateFactory = createInitialStateFactory();\n    /** @type {?} */\n    const selectorsFactory = createSelectorsFactory();\n    /** @type {?} */\n    const stateAdapter = sortComparer\n        ? createSortedStateAdapter(selectId, sortComparer)\n        : createUnsortedStateAdapter(selectId);\n    return Object.assign({ selectId,\n        sortComparer }, stateFactory, selectorsFactory, stateAdapter);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n * @template T\n */\nclass Dictionary {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\n//# sourceMappingURL=entity.js.map\n\n\n/***/ }),\n\n/***/ \"./src/app/services/user.service.ts\":\n/*!******************************************!*\\\n  !*** ./src/app/services/user.service.ts ***!\n  \\******************************************/\n/*! exports provided: UserService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserService\", function() { return UserService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ \"./node_modules/@angular/common/fesm2015/http.js\");\n/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../environments/environment */ \"./src/environments/environment.ts\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ \"./node_modules/rxjs/_esm2015/operators/index.js\");\n\n\n\n\n\nlet UserService = class UserService {\n    constructor(http) {\n        this.http = http;\n    }\n    getUsers() {\n        return this.http.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__[\"environment\"].fbDbUrl}/users.json`).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[\"map\"])((response) => {\n            return Object\n                .keys(response)\n                .map(key => (Object.assign({}, response[key], { DOB: new Date(response[key].DOB) })));\n        }));\n    }\n    getUserById(payload) {\n        return this.http.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__[\"environment\"].fbDbUrl}/users/${payload}.json`);\n    }\n    createUser(payload) {\n        return this.http.patch(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__[\"environment\"].fbDbUrl}/users/${payload.id}.json`, payload).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__[\"map\"])((response) => {\n            return Object.assign({}, payload, { id: response.name, DOB: new Date(payload.DOB) });\n        }));\n    }\n    updateUser(user) {\n        return this.http.patch(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__[\"environment\"].fbDbUrl}/users/${user.id}.json`, user);\n    }\n};\nUserService.ctorParameters = () => [\n    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpClient\"] }\n];\nUserService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])({\n        providedIn: 'root'\n    })\n], UserService);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/store/effects/user.effects.ts\":\n/*!***********************************************!*\\\n  !*** ./src/app/store/effects/user.effects.ts ***!\n  \\***********************************************/\n/*! exports provided: UserEffects */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UserEffects\", function() { return UserEffects; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/user.service */ \"./src/app/services/user.service.ts\");\n/* harmony import */ var _ngrx_effects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngrx/effects */ \"./node_modules/@ngrx/effects/fesm2015/effects.js\");\n/* harmony import */ var _actions_user_action__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../actions/user.action */ \"./src/app/store/actions/user.action.ts\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"./node_modules/rxjs/_esm2015/index.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ \"./node_modules/rxjs/_esm2015/operators/index.js\");\n\n\n\n\n\n\n\nlet UserEffects = class UserEffects {\n    constructor(actions$, userService) {\n        this.actions$ = actions$;\n        this.userService = userService;\n        this.loadUsers$ = this.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__[\"ofType\"])(_actions_user_action__WEBPACK_IMPORTED_MODULE_4__[\"UserActionType\"].LOAD_USERS), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"mergeMap\"])((action) => this.userService.getUsers().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"map\"])((users) => new _actions_user_action__WEBPACK_IMPORTED_MODULE_4__[\"LoadUsersSuccess\"](users)), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"catchError\"])(err => Object(rxjs__WEBPACK_IMPORTED_MODULE_5__[\"of\"])(new _actions_user_action__WEBPACK_IMPORTED_MODULE_4__[\"LoadUsersFail\"](err))))));\n        this.loadUser$ = this.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__[\"ofType\"])(_actions_user_action__WEBPACK_IMPORTED_MODULE_4__[\"UserActionType\"].LOAD_USER), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"mergeMap\"])((action) => this.userService.getUserById(action.payload).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"map\"])((user) => new _actions_user_action__WEBPACK_IMPORTED_MODULE_4__[\"LoadUserSuccess\"](user)), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"catchError\"])(err => Object(rxjs__WEBPACK_IMPORTED_MODULE_5__[\"of\"])(new _actions_user_action__WEBPACK_IMPORTED_MODULE_4__[\"LoadUserFail\"](err))))));\n        this.createUser$ = this.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__[\"ofType\"])(_actions_user_action__WEBPACK_IMPORTED_MODULE_4__[\"UserActionType\"].CREATE_USER), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"map\"])((action) => action.payload), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"mergeMap\"])((user) => this.userService.createUser(user).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"map\"])((newUser) => new _actions_user_action__WEBPACK_IMPORTED_MODULE_4__[\"CreateUserSuccess\"](newUser)), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"catchError\"])(err => Object(rxjs__WEBPACK_IMPORTED_MODULE_5__[\"of\"])(new _actions_user_action__WEBPACK_IMPORTED_MODULE_4__[\"CreateUserFail\"](err))))));\n        this.updateUser$ = this.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__[\"ofType\"])(_actions_user_action__WEBPACK_IMPORTED_MODULE_4__[\"UserActionType\"].UPDATE_USER), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"map\"])((action) => action.payload), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"mergeMap\"])((user) => this.userService.updateUser(user).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"map\"])((updateUser) => new _actions_user_action__WEBPACK_IMPORTED_MODULE_4__[\"UpdateUserSuccess\"]({\n            id: updateUser.id,\n            changes: updateUser\n        })), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__[\"catchError\"])(err => Object(rxjs__WEBPACK_IMPORTED_MODULE_5__[\"of\"])(new _actions_user_action__WEBPACK_IMPORTED_MODULE_4__[\"UpdateUserFail\"](err))))));\n    }\n};\nUserEffects.ctorParameters = () => [\n    { type: _ngrx_effects__WEBPACK_IMPORTED_MODULE_3__[\"Actions\"] },\n    { type: _services_user_service__WEBPACK_IMPORTED_MODULE_2__[\"UserService\"] }\n];\ntslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__[\"Effect\"])()\n], UserEffects.prototype, \"loadUsers$\", void 0);\ntslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__[\"Effect\"])()\n], UserEffects.prototype, \"loadUser$\", void 0);\ntslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__[\"Effect\"])()\n], UserEffects.prototype, \"createUser$\", void 0);\ntslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_3__[\"Effect\"])()\n], UserEffects.prototype, \"updateUser$\", void 0);\nUserEffects = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], UserEffects);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/store/reducers/user.reducer.ts\":\n/*!************************************************!*\\\n  !*** ./src/app/store/reducers/user.reducer.ts ***!\n  \\************************************************/\n/*! exports provided: userAdapter, defaultUser, initialState, userReducer, getUsers, getUsersLoading, getUsersLoaded, getUsersError, getCurrentUserId, getCurrentUser */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"userAdapter\", function() { return userAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultUser\", function() { return defaultUser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initialState\", function() { return initialState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"userReducer\", function() { return userReducer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUsers\", function() { return getUsers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUsersLoading\", function() { return getUsersLoading; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUsersLoaded\", function() { return getUsersLoaded; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUsersError\", function() { return getUsersError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCurrentUserId\", function() { return getCurrentUserId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCurrentUser\", function() { return getCurrentUser; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _actions_user_action__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../actions/user.action */ \"./src/app/store/actions/user.action.ts\");\n/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngrx/store */ \"./node_modules/@ngrx/store/fesm2015/store.js\");\n/* harmony import */ var _ngrx_entity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngrx/entity */ \"./node_modules/@ngrx/entity/fesm2015/entity.js\");\n\n\n\n\nconst userAdapter = Object(_ngrx_entity__WEBPACK_IMPORTED_MODULE_3__[\"createEntityAdapter\"])();\nconst defaultUser = {\n    ids: [],\n    entities: {},\n    selectedUserId: null,\n    loading: false,\n    loaded: false,\n    error: ''\n};\nconst initialState = userAdapter.getInitialState(defaultUser);\nfunction userReducer(state = initialState, action) {\n    switch (action.type) {\n        case _actions_user_action__WEBPACK_IMPORTED_MODULE_1__[\"UserActionType\"].LOAD_USERS_SUCCESS: {\n            return userAdapter.addAll(action.payload, Object.assign({}, state, { loading: false, loaded: true }));\n        }\n        case _actions_user_action__WEBPACK_IMPORTED_MODULE_1__[\"UserActionType\"].LOAD_USERS_FAIL: {\n            return Object.assign({}, state, { entities: {}, loading: false, loaded: false, error: action.payload });\n        }\n        case _actions_user_action__WEBPACK_IMPORTED_MODULE_1__[\"UserActionType\"].LOAD_USER_SUCCESS: {\n            return userAdapter.addOne(action.payload, Object.assign({}, state, { selectedUserId: action.payload.id }));\n        }\n        case _actions_user_action__WEBPACK_IMPORTED_MODULE_1__[\"UserActionType\"].LOAD_USER_FAIL: {\n            return Object.assign({}, state, { error: action.payload });\n        }\n        case _actions_user_action__WEBPACK_IMPORTED_MODULE_1__[\"UserActionType\"].CREATE_USER_SUCCESS: {\n            return userAdapter.addOne(action.payload, state);\n        }\n        case _actions_user_action__WEBPACK_IMPORTED_MODULE_1__[\"UserActionType\"].CREATE_USER_FAIL: {\n            return Object.assign({}, state, { error: action.payload });\n        }\n        case _actions_user_action__WEBPACK_IMPORTED_MODULE_1__[\"UserActionType\"].UPDATE_USER_SUCCESS: {\n            return userAdapter.updateOne(action.payload, state);\n        }\n        case _actions_user_action__WEBPACK_IMPORTED_MODULE_1__[\"UserActionType\"].UPDATE_USER_FAIL: {\n            return Object.assign({}, state, { error: action.payload });\n        }\n        default: {\n            return state;\n        }\n    }\n}\nconst getUserFeatureState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_2__[\"createFeatureSelector\"])('users');\nconst getUsers = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_2__[\"createSelector\"])(getUserFeatureState, userAdapter.getSelectors().selectAll);\nconst getUsersLoading = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_2__[\"createSelector\"])(getUserFeatureState, (state) => state.loading);\nconst getUsersLoaded = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_2__[\"createSelector\"])(getUserFeatureState, (state) => state.loaded);\nconst getUsersError = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_2__[\"createSelector\"])(getUserFeatureState, (state) => state.error);\nconst getCurrentUserId = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_2__[\"createSelector\"])(getUserFeatureState, (state) => state.selectedUserId);\nconst getCurrentUser = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_2__[\"createSelector\"])(getUserFeatureState, getCurrentUserId, state => state.entities[state.selectedUserId]);\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=default~app-components-incidents-incidents-module~app-components-process-process-module~app-componen~c190ce4d-es2015.js.map","/**\n * @license NgRx 8.4.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\nimport { createSelector } from '@ngrx/store';\nimport { isDevMode } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template V\n * @return {?}\n */\nfunction getInitialEntityState() {\n    return {\n        ids: [],\n        entities: {},\n    };\n}\n/**\n * @template V\n * @return {?}\n */\nfunction createInitialStateFactory() {\n    /**\n     * @param {?=} additionalState\n     * @return {?}\n     */\n    function getInitialState(additionalState = {}) {\n        return Object.assign(getInitialEntityState(), additionalState);\n    }\n    return { getInitialState };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @return {?}\n */\nfunction createSelectorsFactory() {\n    /**\n     * @param {?=} selectState\n     * @return {?}\n     */\n    function getSelectors(selectState) {\n        /** @type {?} */\n        const selectIds = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.ids);\n        /** @type {?} */\n        const selectEntities = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.entities);\n        /** @type {?} */\n        const selectAll = createSelector(selectIds, selectEntities, (/**\n         * @param {?} ids\n         * @param {?} entities\n         * @return {?}\n         */\n        (ids, entities) => ids.map((/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => ((/** @type {?} */ (entities)))[id]))));\n        /** @type {?} */\n        const selectTotal = createSelector(selectIds, (/**\n         * @param {?} ids\n         * @return {?}\n         */\n        ids => ids.length));\n        if (!selectState) {\n            return {\n                selectIds,\n                selectEntities,\n                selectAll,\n                selectTotal,\n            };\n        }\n        return {\n            selectIds: createSelector(selectState, selectIds),\n            selectEntities: createSelector(selectState, selectEntities),\n            selectAll: createSelector(selectState, selectAll),\n            selectTotal: createSelector(selectState, selectTotal),\n        };\n    }\n    return { getSelectors };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst DidMutate = {\n    EntitiesOnly: 0,\n    Both: 1,\n    None: 2,\n};\nDidMutate[DidMutate.EntitiesOnly] = 'EntitiesOnly';\nDidMutate[DidMutate.Both] = 'Both';\nDidMutate[DidMutate.None] = 'None';\n/**\n * @template V, R\n * @param {?} mutator\n * @return {?}\n */\nfunction createStateOperator(mutator) {\n    return (/**\n     * @template S\n     * @param {?} arg\n     * @param {?} state\n     * @return {?}\n     */\n    function operation(arg, state) {\n        /** @type {?} */\n        const clonedEntityState = {\n            ids: [...state.ids],\n            entities: Object.assign({}, state.entities),\n        };\n        /** @type {?} */\n        const didMutate = mutator(arg, clonedEntityState);\n        if (didMutate === DidMutate.Both) {\n            return Object.assign({}, state, clonedEntityState);\n        }\n        if (didMutate === DidMutate.EntitiesOnly) {\n            return Object.assign({}, state, { entities: clonedEntityState.entities });\n        }\n        return state;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} entity\n * @param {?} selectId\n * @return {?}\n */\nfunction selectIdValue(entity, selectId) {\n    /** @type {?} */\n    const key = selectId(entity);\n    if (isDevMode() && key === undefined) {\n        console.warn('@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n    }\n    return key;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @return {?}\n */\nfunction createUnsortedStateAdapter(selectId) {\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        /** @type {?} */\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            return DidMutate.None;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(entities, state) {\n        /** @type {?} */\n        let didMutate = false;\n        for (const entity of entities) {\n            didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function addAllMutably(entities, state) {\n        state.ids = [];\n        state.entities = {};\n        addManyMutably(entities, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    function removeOneMutably(key, state) {\n        return removeManyMutably([key], state);\n    }\n    /**\n     * @param {?} keysOrPredicate\n     * @param {?} state\n     * @return {?}\n     */\n    function removeManyMutably(keysOrPredicate, state) {\n        /** @type {?} */\n        const keys = keysOrPredicate instanceof Array\n            ? keysOrPredicate\n            : state.ids.filter((/**\n             * @param {?} key\n             * @return {?}\n             */\n            (key) => keysOrPredicate(state.entities[key])));\n        /** @type {?} */\n        const didMutate = keys\n            .filter((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => key in state.entities))\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => delete state.entities[key])).length > 0;\n        if (didMutate) {\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @return {?}\n             */\n            (id) => id in state.entities));\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    function removeAll(state) {\n        return Object.assign({}, state, {\n            ids: [],\n            entities: {},\n        });\n    }\n    /**\n     * @param {?} keys\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeNewKey(keys, update, state) {\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        /** @type {?} */\n        const hasNewKey = newKey !== update.id;\n        if (hasNewKey) {\n            keys[update.id] = newKey;\n            delete state.entities[update.id];\n        }\n        state.entities[newKey] = updated;\n        return hasNewKey;\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const newKeys = {};\n        updates = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => update.id in state.entities));\n        /** @type {?} */\n        const didMutateEntities = updates.length > 0;\n        if (didMutateEntities) {\n            /** @type {?} */\n            const didMutateIds = updates.filter((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => takeNewKey(newKeys, update, state))).length > 0;\n            if (didMutateIds) {\n                state.ids = state.ids.map((/**\n                 * @param {?} id\n                 * @return {?}\n                 */\n                (id) => newKeys[id] || id));\n                return DidMutate.Both;\n            }\n            else {\n                return DidMutate.EntitiesOnly;\n            }\n        }\n        return DidMutate.None;\n    }\n    /**\n     * @param {?} map\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(map, state) {\n        /** @type {?} */\n        const changes = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = map(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        /** @type {?} */\n        const updates = changes.filter((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ id }) => id in state.entities));\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    return {\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        addAll: createStateOperator(addAllMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        removeOne: createStateOperator(removeOneMutably),\n        removeMany: createStateOperator(removeManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @param {?} sort\n * @return {?}\n */\nfunction createSortedStateAdapter(selectId, sort) {\n    const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(selectId);\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        return addManyMutably([entity], state);\n    }\n    /**\n     * @param {?} newModels\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(newModels, state) {\n        /** @type {?} */\n        const models = newModels.filter((/**\n         * @param {?} model\n         * @return {?}\n         */\n        model => !(selectIdValue(model, selectId) in state.entities)));\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            merge(models, state);\n            return DidMutate.Both;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function addAllMutably(models, state) {\n        state.entities = {};\n        state.ids = [];\n        addManyMutably(models, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} models\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeUpdatedModel(models, update, state) {\n        if (!(update.id in state.entities)) {\n            return false;\n        }\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        delete state.entities[update.id];\n        models.push(updated);\n        return newKey !== update.id;\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const models = [];\n        /** @type {?} */\n        const didMutateIds = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => takeUpdatedModel(models, update, state))).length >\n            0;\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            /** @type {?} */\n            const originalIds = state.ids;\n            /** @type {?} */\n            const updatedIndexes = [];\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @param {?} index\n             * @return {?}\n             */\n            (id, index) => {\n                if (id in state.entities) {\n                    return true;\n                }\n                else {\n                    updatedIndexes.push(index);\n                    return false;\n                }\n            }));\n            merge(models, state);\n            if (!didMutateIds &&\n                updatedIndexes.every((/**\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (i) => state.ids[i] === originalIds[i]))) {\n                return DidMutate.EntitiesOnly;\n            }\n            else {\n                return DidMutate.Both;\n            }\n        }\n    }\n    /**\n     * @param {?} updatesOrMap\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(updatesOrMap, state) {\n        /** @type {?} */\n        const updates = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = updatesOrMap(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function merge(models, state) {\n        models.sort(sort);\n        /** @type {?} */\n        const ids = [];\n        /** @type {?} */\n        let i = 0;\n        /** @type {?} */\n        let j = 0;\n        while (i < models.length && j < state.ids.length) {\n            /** @type {?} */\n            const model = models[i];\n            /** @type {?} */\n            const modelId = selectIdValue(model, selectId);\n            /** @type {?} */\n            const entityId = state.ids[j];\n            /** @type {?} */\n            const entity = state.entities[entityId];\n            if (sort(model, entity) <= 0) {\n                ids.push(modelId);\n                i++;\n            }\n            else {\n                ids.push(entityId);\n                j++;\n            }\n        }\n        if (i < models.length) {\n            state.ids = ids.concat(models.slice(i).map(selectId));\n        }\n        else {\n            state.ids = ids.concat(state.ids.slice(j));\n        }\n        models.forEach((/**\n         * @param {?} model\n         * @param {?} i\n         * @return {?}\n         */\n        (model, i) => {\n            state.entities[selectId(model)] = model;\n        }));\n    }\n    return {\n        removeOne,\n        removeMany,\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        addAll: createStateOperator(addAllMutably),\n        addMany: createStateOperator(addManyMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?=} options\n * @return {?}\n */\nfunction createEntityAdapter(options = {}) {\n    const { selectId, sortComparer } = Object.assign({ sortComparer: false, selectId: (/**\n         * @param {?} instance\n         * @return {?}\n         */\n        (instance) => instance.id) }, options);\n    /** @type {?} */\n    const stateFactory = createInitialStateFactory();\n    /** @type {?} */\n    const selectorsFactory = createSelectorsFactory();\n    /** @type {?} */\n    const stateAdapter = sortComparer\n        ? createSortedStateAdapter(selectId, sortComparer)\n        : createUnsortedStateAdapter(selectId);\n    return Object.assign({ selectId,\n        sortComparer }, stateFactory, selectorsFactory, stateAdapter);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n * @template T\n */\nclass Dictionary {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { createEntityAdapter, Dictionary };\n//# sourceMappingURL=entity.js.map\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nimport {UserInterface} from '../interfaces/user.interface';\r\nimport {environment} from '../../environments/environment';\r\nimport {map} from 'rxjs/operators';\r\nimport {ResponseInterface} from '../interfaces/response.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsers(): Observable<UserInterface[]> {\r\n    return this.http.get<UserInterface[]>(`${environment.fbDbUrl}/users.json`).pipe(\r\n      map((response: {[key: string]: any}) => {\r\n        return Object\r\n          .keys(response)\r\n          .map( key => ({\r\n            ...response[key],\r\n            DOB: new Date(response[key].DOB)\r\n          }));\r\n      })\r\n    );\r\n  }\r\n\r\n  getUserById(payload: string): Observable<UserInterface> {\r\n\r\n    return this.http.get<UserInterface>(`${environment.fbDbUrl}/users/${payload}.json`);\r\n  }\r\n\r\n  createUser(payload: UserInterface): Observable<UserInterface> {\r\n\r\n    return this.http.patch(`${environment.fbDbUrl}/users/${payload.id}.json`, payload).pipe(\r\n      map((response: ResponseInterface) => {\r\n        return {\r\n          ...payload,\r\n          id: response.name,\r\n          DOB: new Date(payload.DOB),\r\n        };\r\n        }));\r\n  }\r\n\r\n\r\n  updateUser(user: UserInterface): Observable<UserInterface> {\r\n    return this.http.patch<UserInterface>(`${environment.fbDbUrl}/users/${user.id}.json`, user);\r\n  }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Action} from '@ngrx/store';\r\nimport {UserService} from '../../services/user.service';\r\nimport {Actions, Effect, ofType} from '@ngrx/effects';\r\n\r\nimport * as userActions from '../actions/user.action';\r\nimport { UserInterface} from '../../interfaces/user.interface';\r\nimport {Observable, of} from 'rxjs';\r\nimport {catchError, map, mergeMap} from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class UserEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  @Effect()\r\n  loadUsers$: Observable<Action> = this.actions$.pipe(\r\n    ofType<userActions.LoadUsers>(\r\n      userActions.UserActionType.LOAD_USERS\r\n    ),\r\n    mergeMap((action: userActions.LoadUsers) =>\r\n      this.userService.getUsers().pipe(\r\n        map(\r\n          (users: UserInterface[]) =>\r\n            new userActions.LoadUsersSuccess(users)\r\n        ),\r\n        catchError(err => of(new userActions.LoadUsersFail(err)))\r\n      )\r\n    )\r\n  );\r\n  @Effect()\r\n  loadUser$: Observable<Action> = this.actions$.pipe(\r\n    ofType<userActions.LoadUser>(\r\n      userActions.UserActionType.LOAD_USER\r\n    ),\r\n    mergeMap((action: userActions.LoadUser) =>\r\n      this.userService.getUserById(action.payload).pipe(\r\n        map(\r\n          (user: UserInterface) =>\r\n            new userActions.LoadUserSuccess(user)\r\n        ),\r\n        catchError(err => of(new userActions.LoadUserFail(err)))\r\n      )\r\n    )\r\n  );\r\n  @Effect()\r\n  createUser$: Observable<Action> = this.actions$.pipe(\r\n    ofType<userActions.CreateUser>(\r\n      userActions.UserActionType.CREATE_USER\r\n    ),\r\n    map((action: userActions.CreateUser) => action.payload),\r\n    mergeMap((user: UserInterface) =>\r\n      this.userService.createUser(user).pipe(\r\n        map(\r\n          (newUser: UserInterface) =>\r\n            new userActions.CreateUserSuccess(newUser)\r\n        ),\r\n        catchError(err => of(new userActions.CreateUserFail(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n  @Effect()\r\n  updateUser$: Observable<Action> = this.actions$.pipe(\r\n    ofType<userActions.UpdateUser>(\r\n      userActions.UserActionType.UPDATE_USER\r\n    ),\r\n    map((action: userActions.UpdateUser) => action.payload),\r\n    mergeMap((user: UserInterface) =>\r\n      this.userService.updateUser(user).pipe(\r\n        map(\r\n          (updateUser: UserInterface) =>\r\n            new userActions.UpdateUserSuccess({\r\n              id: updateUser.id,\r\n              changes: updateUser\r\n            })\r\n        ),\r\n        catchError(err => of(new userActions.UpdateUserFail(err)))\r\n      )\r\n    )\r\n  );\r\n\r\n\r\n}\r\n","import {UserInterface} from '../../interfaces/user.interface';\r\n\r\nimport * as UserActions from '../actions/user.action';\r\nimport {createFeatureSelector, createSelector} from '@ngrx/store';\r\nimport {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\r\n\r\n\r\n\r\nexport interface UserState extends EntityState<UserInterface> {\r\n  selectedUserId: string | null;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  error: string;\r\n}\r\n\r\n\r\n\r\n\r\nexport const userAdapter: EntityAdapter<UserInterface> = createEntityAdapter<UserInterface>();\r\n\r\nexport const defaultUser: UserState = {\r\n  ids: [],\r\n  entities: {},\r\n  selectedUserId: null,\r\n  loading: false,\r\n  loaded: false,\r\n  error: ''\r\n};\r\n\r\nexport const  initialState = userAdapter.getInitialState(defaultUser);\r\n\r\n\r\nexport function userReducer(state = initialState, action: UserActions.Action): UserState {\r\n  switch (action.type) {\r\n    case UserActions.UserActionType.LOAD_USERS_SUCCESS: {\r\n      return userAdapter.addAll(action.payload, {\r\n        ...state,\r\n        loading: false,\r\n        loaded: true\r\n      });\r\n    }\r\n    case UserActions.UserActionType.LOAD_USERS_FAIL: {\r\n      return {\r\n        ...state,\r\n        entities: {},\r\n        loading: false,\r\n        loaded: false,\r\n        error: action.payload\r\n      };\r\n    }\r\n\r\n    case UserActions.UserActionType.LOAD_USER_SUCCESS: {\r\n      return userAdapter.addOne(action.payload, {\r\n        ...state,\r\n        selectedUserId: action.payload.id\r\n      });\r\n    }\r\n    case UserActions.UserActionType.LOAD_USER_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    }\r\n\r\n    case UserActions.UserActionType.CREATE_USER_SUCCESS: {\r\n      return userAdapter.addOne(action.payload, state);\r\n    }\r\n    case UserActions.UserActionType.CREATE_USER_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    }\r\n\r\n    case UserActions.UserActionType.UPDATE_USER_SUCCESS: {\r\n      return userAdapter.updateOne(action.payload, state);\r\n    }\r\n    case UserActions.UserActionType.UPDATE_USER_FAIL: {\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nconst getUserFeatureState = createFeatureSelector<UserState>(\r\n  'users'\r\n);\r\nexport const getUsers = createSelector(\r\n  getUserFeatureState,\r\n  userAdapter.getSelectors().selectAll\r\n);\r\nexport const getUsersLoading = createSelector(\r\n  getUserFeatureState,\r\n  (state: UserState) => state.loading\r\n);\r\nexport const getUsersLoaded = createSelector(\r\n  getUserFeatureState,\r\n  (state: UserState) => state.loaded\r\n);\r\nexport const getUsersError = createSelector(\r\n  getUserFeatureState,\r\n  (state: UserState) => state.error\r\n);\r\nexport const getCurrentUserId = createSelector(\r\n  getUserFeatureState,\r\n  (state: UserState) => state.selectedUserId\r\n);\r\nexport const getCurrentUser = createSelector(\r\n  getUserFeatureState,\r\n  getCurrentUserId,\r\n  state => state.entities[state.selectedUserId]\r\n);\r\n"]}